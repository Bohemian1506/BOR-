name: Claude Code Assistant - EventPay Manager

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened]
  pull_request_review:
    types: [submitted]
  workflow_dispatch: # 手動実行も可能

jobs:
  claude-assistant:
    if: |
      contains(github.event.comment.body, '@claude') || 
      contains(github.event.review.body, '@claude') || 
      contains(github.event.issue.body, '@claude')
    
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      issues: write
      pull-requests: write
      actions: write
      id-token: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # cache: 'npm' # Rails主体のプロジェクトなのでnpmキャッシュは不要
          
      - name: Setup GitHub CLI
        run: |
          # GitHub CLI は GitHub Actions runner にプリインストールされている
          echo "✅ GitHub CLI is available: $(gh --version | head -1)"
          gh auth status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Install dependencies with Bun
        run: |
          # package.jsonが存在する場合のみbun installを実行
          if [ -f "package.json" ]; then
            echo "Installing dependencies with bun..."
            bun install || {
              echo "bun install failed, but continuing with workflow"
              echo "This might be expected for Rails-only projects"
            }
          else
            echo "No package.json found, skipping bun install"
          fi
          
          # bunコマンドが利用可能かテスト
          if command -v bun &> /dev/null; then
            echo "✅ Bun is available: $(bun --version)"
          else
            echo "❌ Bun is not available"
          fi
          
      - name: Environment verification
        run: |
          echo "=== Environment Verification ==="
          echo "Node.js: $(node --version)"
          echo "npm: $(npm --version)"
          echo "Bun: $(bun --version || echo 'Not available')"
          echo "GitHub CLI: $(gh --version | head -1)"
          echo "Git: $(git --version)"
          echo "Ruby: $(ruby --version || echo 'Not available')"
          echo "Rails: $(rails --version || echo 'Not available')"
          echo "=== Working Directory ==="
          pwd
          ls -la
          echo "=== Files in project root ==="
          find . -maxdepth 2 -type f -name "*.json" -o -name "*.yml" -o -name "*.rb" | head -10
          
      - name: Run Claude Code Action
        uses: anthropics/claude-code-action@main
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_instructions: |
            EventPay Managerは初学者向けのRailsプロジェクトです。以下を重視してください：
            
            1. **学習重視**: コードには日本語コメントを適切に付ける
            2. **シンプル実装**: 複雑な設定や機能は避ける
            3. **Rails基本**: MVCパターンを明確にした実装
            4. **Docker環境**: Docker + Docker Compose前提での回答
            5. **段階的説明**: 初学者にも理解できる段階的な説明
            6. **セキュリティ**: 基本的な対策のみ実装
            7. **テスト**: 重要な機能のみRSpecでテスト
            
            ファイル編集時は必ずCLAUDE.mdの開発方針に従ってください。